#ifndef _BOARD_PARAMETERS_H#define _BOARD_PARAMETERS_H#include <stdint.h>#include "bb_types.h"typedef struct{	uint8_t page;       //page: 0,1,2,3    uint8_t addr;    uint8_t value;}STRU_BB_REG;typedef struct{    uint8_t addr;    uint8_t value;}STRU_RF_REG;typedef struct {    //before calibration    uint8_t           u8_bbStartMcs10M;    uint8_t           u8_bbStartMcs20M;        uint8_t           u8_bbSkyRegsCnt;    uint8_t           u8_bbGrdRegsCnt;    uint8_t           u8_rfCnt;                 //1: only enable 1 RF8003s                                                //2: enable 2 RF8003s    uint8_t           u8_rf1SkyRegsCnt;                                                        uint8_t           u8_rf1GrdRegsCnt;        uint8_t 	      u8_rf2GrdRegsCnt;    //registers count after calibration    uint8_t           u8_bbSkyRegsCntAfterCali;    uint8_t           u8_bbGrdRegsCntAfterCali;    uint8_t           u8_rf1SkyRegsCntAfterCali;                                                        uint8_t           u8_rf1GrdRegsCntAfterCali;        uint8_t 	      u8_rf2GrdRegsCntAfterCali;    ENUM_RF_BAND      e_bandsupport;        const STRU_BB_REG  *pstru_bbSkyRegs;    const STRU_BB_REG  *pstru_bbGrdRegs;        const STRU_RF_REG  *pstru_rf1SkyRegs;    const STRU_RF_REG  *pstru_rf2SkyRegs;    const STRU_RF_REG  *pstru_rf1GrdRegs;    const STRU_RF_REG  *pstru_rf2GrdRegs;    //registers after calibration    const STRU_BB_REG  *pstru_bbSkyRegsAfterCali;    const STRU_BB_REG  *pstru_bbGrdRegsAfterCali;    const STRU_RF_REG  *pstru_rf1SkyRegsAfterCali;    const STRU_RF_REG  *pstru_rf1GrdRegsAfterCali;    const STRU_RF_REG  *pstru_rf2GrdRegsAfterCali;    uint8_t *name;}STRU_BoardCfg;extern STRU_BoardCfg stru_boardCfg;#endif