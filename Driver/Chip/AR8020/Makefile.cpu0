obj = cpu0

# top file directory
TOP_DIR ?= ../../../

# build file directory
BUILD_DIR ?= $(TOP_DIR)/Build

# binary file director
OUTPUT_DIR ?= $(TOP_DIR)/Output
OUTPUT_HEADER_STAGING_DIR ?= $(OUTPUT_DIR)/Staging/Inc
OUTPUT_LIB_STAGING_DIR ?= $(OUTPUT_DIR)/Staging/Lib

# current directory
CURDIR ?= $(shell pwd)

include $(BUILD_DIR)/config.mk

###############################################################################
# static library name
LIB = lib$(CHIP)drv.a

CPU_NUMBER = cpu0

# source file(s), including c file(s)
SRC_C := SysCtl/Src/reg_rw.c \
         SysCtl/Src/inter_core.c \
         SysCtl/Src/pll_ctrl.c \
         SysCtl/Src/systicks.c \
         SysCtl/Src/timer.c \
         SysCtl/Src/gpio.c \
         SysCtl/Src/fpu.c \
         SysCtl/Src/cpu_info.c \
         SysCtl/Src/interrupt.c \
         UART/Src/serial.c \
         CAN/Src/can.c \
         Capture/Src/ov5640_mipi.c \
         SD/Src/sd_core.c \
         SD/Src/sd_card.c \
         SD/Src/sd_host.c \
         I2C/Src/i2c_ll.c \
         I2C/Src/i2c.c \
         SRAM/Src/sram.c \
         BB/Src/bb_uart_com.c \
         BB/Src/bb_ctrl_proxy.c \
         SPI/Src/spi.c \
         SPI/Src/bb_spi.c \
         QuadSPI/Src/quad_spi_ctrl.c \
         WirelessInfo/Src/wireless_interface.c \
         DMA/Src/dma.c \
         USB/USB_Host/Class/MSC/Src/usbh_msc_bot.c \
         USB/USB_Host/Class/MSC/Src/usbh_msc.c \
         USB/USB_Host/Class/MSC/Src/usbh_msc_scsi.c \
         USB/USB_Host/Core/Src/usbh_conf.c \
         USB/USB_Host/Core/Src/usbh_core.c \
         USB/USB_Host/Core/Src/usbh_ctlreq.c \
         USB/USB_Host/Core/Src/usbh_ioreq.c \
         USB/USB_Host/Core/Src/usbh_pipes.c \
         USB/USB_Device/Class/HID/Src/usbd_hid.c \
         USB/USB_Device/Class/HID/Src/usbd_hid_desc.c \
         USB/USB_Device/Core/Src/usbd_conf.c \
         USB/USB_Device/Core/Src/usbd_core.c \
         USB/USB_Device/Core/Src/usbd_ctlreq.c \
         USB/USB_Device/Core/Src/usbd_ioreq.c \
         USB/USB_LL_Driver/Src/stm32f7xx_ll_usb.c \
         USB/USB_LL_Driver/Src/stm32f7xx_hal_pcd.c \
         USB/USB_LL_Driver/Src/stm32f7xx_hal_pcd_ex.c \
         USB/USB_LL_Driver/Src/stm32f7xx_hal_hcd.c

INCDIRS := -ISysCtl/Inc \
           -ISD/Inc \
           -IUART/Inc \
           -ICAN/Inc \
           -ICapture/Inc \
           -II2C/Inc \
           -ISRAM/Inc \
           -I$(TOP_DIR)/Configure \
           -I$(TOP_DIR)/Library/ThirdParty/CMSIS/Device/ST/STM32F7xx/Include \
           -I$(TOP_DIR)/Library/ThirdParty/CMSIS/Include \
           -I$(TOP_DIR)/Library/Artosyn/Common/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/USB/USB_Device/Core/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/USB/USB_Device/Class/HID/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/USB/USB_LL_Driver/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/USB/USB_Host/Core/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/USB/USB_Host/Class/MSC/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/UART/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/SD/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/SRAM/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/CAN/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/Capture/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/BB/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/SPI/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/QuadSPI/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/WirelessInfo/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/DMA/Inc \
           -I$(TOP_DIR)/Configure/Include

# object file(s)
OBJ_C     := $(patsubst %.c,%.o,$(SRC_C))

all: $(obj).depend $(LIB) install

$(LIB): CFLAGS += -DCPU0_DRV 
$(LIB): $(OBJ_C)
	@echo "Generating static library: " $(notdir $@)
	$(AR) $(ARFLAGS) $@ $(OBJ_C)

install:
	@echo "Installing static library: $(LIB)"
	@mkdir -p $(OUTPUT_LIB_STAGING_DIR)
	@mkdir -p $(OUTPUT_LIB_STAGING_DIR)/$(CPU_NUMBER)
	@mkdir -p $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f $(LIB) $(OUTPUT_LIB_STAGING_DIR)/$(CPU_NUMBER)
	@cp -f UART/Inc/serial.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f CAN/Inc/can.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f Capture/Inc/ov5640_mipi.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f I2C/Inc/i2c.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SPI/Inc/spi.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SPI/Inc/bb_spi.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f BB/Inc/bb_uart_com.h $(OUTPUT_HEADER_STAGING_DIR) 
	@cp -f SD/Inc/* $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SRAM/Inc/sram.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SysCtl/Inc/inter_core.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SysCtl/Inc/pll_ctrl.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SysCtl/Inc/systicks.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SysCtl/Inc/fpu.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SysCtl/Inc/gpio.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SysCtl/Inc/cpu_info.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f SysCtl/Inc/interrupt.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f QuadSPI/Inc/quad_spi_ctrl.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f DMA/Inc/dma.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Core/Inc/usbh_def.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Core/Inc/usbh_conf.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Core/Inc/usbh_core.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Core/Inc/usbh_ioreq.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Core/Inc/usbh_pipes.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Core/Inc/usbh_ctlreq.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Class/MSC/Inc/usbh_msc.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Class/MSC/Inc/usbh_msc_bot.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Class/MSC/Inc/usbh_msc_scsi.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Host/Class/UVC/Inc/usbh_uvc.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Device/Core/Inc/usbd_core.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Device/Core/Inc/usbd_conf.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Device/Core/Inc/usbd_def.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Device/Core/Inc/usbd_ioreq.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Device/Core/Inc/usbd_ctlreq.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Device/Class/HID/Inc/usbd_hid.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_Device/Class/HID/Inc/usbd_hid_desc.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_LL_Driver/Inc/stm32f7xx_hal_pcd.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_LL_Driver/Inc/stm32f7xx_hal_pcd_ex.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_LL_Driver/Inc/stm32f7xx_hal_hcd.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_LL_Driver/Inc/stm32f7xx_hal_def.h $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f USB/USB_LL_Driver/Inc/stm32f7xx_ll_usb.h $(OUTPUT_HEADER_STAGING_DIR)


clean:
	@echo "Cleaning..."
	@$(RM) $(LIB) $(OBJ_C) $(obj).depend $(OUTPUT_LIB_STAGING_DIR)/$(CPU_NUMBER)/$(LIB)
	@$(RM) $(OUTPUT_HEADER_STAGING_DIR)/serial.h
	@$(RM) $(OUTPUT_HEADER_STAGING_DIR)/sd_*

.PHONY: all clean install
#########################################################################

include $(BUILD_DIR)/rules.mk

sinclude $(obj).depend

#########################################################################

