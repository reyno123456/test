obj := cpu2

# top file directory
TOP_DIR ?= ../../../

# build file directory
BUILD_DIR ?= $(TOP_DIR)/Build

# binary file director
OUTPUT_DIR ?= $(TOP_DIR)/Output
OUTPUT_HEADER_STAGING_DIR ?= $(OUTPUT_DIR)/Staging/Inc
OUTPUT_LIB_STAGING_DIR ?= $(OUTPUT_DIR)/Staging/Lib

# current directory
CURDIR ?= $(shell pwd)

include $(BUILD_DIR)/config.mk

###############################################################################
# static library name
LIB = lib$(CHIP)drv.a

CPU_NUMBER = cpu2

# source file(s), including c file(s)
SRC_C := SysCtl/Src/reg_rw.c \
         UART/Src/serial.c \
         H264Encoder/Src/h264_encoder.c \
         H264Encoder/Src/enc_internal.c \
         H264Encoder/Src/vsoc_enc.c \
         H264Encoder/Src/brc.c

INCDIRS := -IUART/Inc \
           -IH264Encoder/Inc \
           -ISysCtl/Inc \
           -I$(TOP_DIR)/Configure \
           -I$(TOP_DIR)/Library/ThirdParty/CMSIS/Device/ST/STM32F7xx/Include \
           -I$(TOP_DIR)/Library/ThirdParty/CMSIS/Include \
           -I$(TOP_DIR)/Library/Artosyn/Common/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/UART/Inc \
           -I$(TOP_DIR)/Driver/Chip/AR8020/SD/Inc \
           -I$(TOP_DIR)/Configure/Include

# object file(s)
OBJ_C     := $(patsubst %.c,%.o,$(SRC_C))

all: $(obj).depend $(LIB) install

$(LIB): CFLAGS += -DCPU2_DRV 
$(LIB): $(OBJ_C)
	@echo "Generating static library: " $(notdir $@)
	$(AR) $(ARFLAGS) $@ $(OBJ_C)

install:
	@echo "Installing static library: $(LIB)"
	@mkdir -p $(OUTPUT_LIB_STAGING_DIR)/$(CPU_NUMBER)
	@cp -f $(LIB) $(OUTPUT_LIB_STAGING_DIR)/$(CPU_NUMBER)
	@mkdir -p $(OUTPUT_HEADER_STAGING_DIR)
	@cp -f H264Encoder/Inc/h264_encoder.h $(OUTPUT_HEADER_STAGING_DIR)

clean:
	@echo "Cleaning..."
	@$(RM) $(LIB) $(OBJ_C) $(obj).depend $(OUTPUT_LIB_STAGING_DIR)/$(CPU_NUMBER)/$(LIB)

.PHONY: all clean install
#########################################################################

include $(BUILD_DIR)/rules.mk

sinclude $(obj).depend

#########################################################################

